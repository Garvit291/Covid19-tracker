{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","covid.jpg"],"names":["Cards","data","confirmed","deaths","recovered","lastUpdate","country","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","gutterBottom","variant","start","end","value","duration","separator","date","Date","toDateString","heading","url","fetchData","a","changedURL","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","fetchedData","this","image","src","covid","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8RA2DeA,EApDD,SAAC,GAA+D,IAAD,IAA7DC,KAAMC,EAAuD,EAAvDA,UAAUC,EAA6C,EAA7CA,OAAOC,EAAsC,EAAtCA,UAAUC,EAA4B,EAA5BA,WAAcC,EAAc,EAAdA,QAC3D,OAAIJ,EAIA,yBAAKK,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAOG,MAAI,EAACC,UAAWC,IAAOC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAOY,WAC5E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,cAAY,GAAzB,YACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAEC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAErE,kBAACP,EAAA,EAAD,CAAYf,UAAWC,IAAOsB,MAAO,IAAIC,KAAK1B,GAAY2B,gBACzD1B,EACD,kBAACgB,EAAA,EAAD,CAAYf,UAAWC,IAAOyB,QAAST,QAAQ,SAA/C,4CAAiGlB,EAAjG,KACA,kBAACgB,EAAA,EAAD,CAAYE,QAAQ,SAApB,qDAKR,kBAACd,EAAA,EAAD,CAAOG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAOJ,YAC3E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAaC,cAAY,GAAzB,aACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAEC,IAAKtB,EAAUuB,MAAOC,SAAU,IAAKC,UAAU,OAErE,kBAACP,EAAA,EAAD,CAAaf,UAAWC,IAAOsB,MAAQ,IAAIC,KAAK1B,GAAY2B,gBAC3D1B,EACD,kBAACgB,EAAA,EAAD,CAAYf,UAAWC,IAAOyB,QAAST,QAAQ,SAA/C,+CAAoGlB,EAApG,KACA,kBAACgB,EAAA,EAAD,CAAYE,QAAQ,SAApB,wDAIR,kBAACd,EAAA,EAAD,CAAOG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAOL,SAC3E,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,GAAxB,UACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAEC,IAAKvB,EAAOwB,MAAOC,SAAU,IAAKC,UAAU,OAElE,kBAACP,EAAA,EAAD,CAAYf,UAAWC,IAAOsB,MAAQ,IAAIC,KAAK1B,GAAY2B,gBAC1D1B,EACD,kBAACgB,EAAA,EAAD,CAAYf,UAAWC,IAAOyB,QAAST,QAAQ,SAA/C,uCAA4FlB,EAA5F,KACA,kBAACgB,EAAA,EAAD,CAAYE,QAAQ,SAApB,iDAzCT,a,yBCPTU,EAAM,iCAGCC,EAAS,uCAAG,WAAO7B,GAAP,6BAAA8B,EAAA,6DAEjBC,EAAWH,EAEZ5B,IACC+B,EAAW,GAAD,OAAIH,EAAJ,sBAAqB5B,IALd,kBAQoDgC,IAAMC,IAAIF,GAR9D,2BAQTpC,KAAQC,EARC,EAQDA,UAAWC,EARV,EAQUA,OAAQC,EARlB,EAQkBA,UAAWC,EAR7B,EAQ6BA,WACxCmC,EAAe,CACjBtC,YACAE,YACAD,SACAE,cAba,kBAeVmC,GAfU,kCAiBjBC,QAAQC,IAAR,MAjBiB,0DAAH,sDAuBTC,EAAc,uCAAG,gCAAAP,EAAA,+EAEDE,IAAMC,IAAN,UAAaL,EAAb,WAFC,uBAEfjC,EAFe,EAEfA,KAEDuC,EAAcvC,EAAK2C,KAAI,SAACC,GAAD,MAAc,CACvC3C,UAAU2C,EAAU3C,UAAU4C,MAC9B3C,OAAO0C,EAAU1C,OAAO2C,MACxBhB,KAAKe,EAAUE,eAPG,kBAUfP,GAVe,gCAYtBC,QAAQC,IAAR,MAZsB,yDAAH,qDAmBdM,EAAc,uCAAG,8BAAAZ,EAAA,+EAEWE,IAAMC,IAAN,UAAaL,EAAb,eAFX,uBAETe,EAFS,EAEfhD,KAAMgD,UAFS,kBAIfA,EAAUL,KAAI,SAACtC,GAAD,OAAWA,EAAQ4C,SAJlB,gCAQtBT,QAAQC,IAAR,MARsB,yDAAH,qD,yBCoCZS,EA5ED,SAAC,GAAsD,IAAD,IAApDlD,KAAMC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,OAASC,EAA0B,EAA1BA,UAAaE,EAAa,EAAbA,QAAa,EAE7B8C,mBAAS,IAFoB,mBAEzDP,EAFyD,KAE7CQ,EAF6C,KAIhEC,qBAAU,YACQ,uCAAG,sBAAAlB,EAAA,kEACbiB,EADa,SACMV,IADN,6EAAH,qDAIdY,KAEF,IAEF,IAAMC,EACFX,EAAUY,OAEN,kBAAC,IAAD,CACIxD,KAAM,CACFyD,OACIb,EAAUD,KAAI,qBAAGd,QACrB6B,SAAS,CAAC,CACM1D,KAAK4C,EAAUD,KAAI,qBAAG1C,aACtB0D,MAAM,WACNC,YAAY,UACZC,MAAK,GAET,CACI7D,KAAK4C,EAAUD,KAAI,qBAAGzC,UACtByD,MAAM,SACNC,YAAY,UACZE,gBAAgB,oBAChBD,MAAK,OAK5B,KAKHE,EACF9D,EAEI,kBAAC,IAAD,CACAD,KAAM,CACFyD,OAAO,CAAC,WAAa,YAAc,UACnCC,SAAS,CAAC,CACNC,MAAM,SACNG,gBAAiB,CAAC,UAAU,UAAW,WACvC9D,KAAK,CAACC,EAAUyB,MAAQvB,EAAUuB,MAAQxB,EAAOwB,UAIzDsC,QAAS,CACLC,OAAS,CAACC,SAAQ,GAClBC,MAAQ,CAACD,SAAQ,EAAOE,KAAK,wBAAD,OAA0B/D,OAM5D,KAIN,OACI,yBAAKC,UAAWC,IAAOC,WAClBH,EACG0D,EACAR,I,mCChDDc,EAtBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEInB,mBAAS,IAFb,mBAEtCoB,EAFsC,KAEnBC,EAFmB,KAY7C,OARAnB,qBAAU,YACO,uCAAG,sBAAAlB,EAAA,kEACbqC,EADa,SACazB,IADb,6EAAH,qDAId0B,KACD,IAGE,kBAACC,EAAA,EAAD,CAAapE,UAAYC,IAAOoE,aAC5B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAY,SAACC,GAAMT,EAAoBS,EAAEC,OAAOtD,SAC1E,4BAAQA,MAAM,IAAd,WACC6C,EAAiB5B,KAAI,SAACtC,EAAQ4E,GAAT,OAAa,4BAAQC,IAAKD,EAAGvD,MAAOrB,GAAUA,S,kCCcrE8E,E,4MAzBXC,MAAO,CACHpF,KAAK,GACLK,QAAQ,I,EAOZiE,oB,uCAAsB,WAAOjE,GAAP,eAAA8B,EAAA,sEACCD,EAAU7B,GADX,OACZL,EADY,OAElB,EAAKqF,SAAS,CAAErF,OAAMK,QAASA,IAFb,2C,wPAHQ6B,I,OAApBoD,E,OACNC,KAAKF,SAAS,CAACrF,KAAMsF,I,qIAOrB,OACI,yBAAKhF,UAAWC,IAAOC,WACvB,yBAAKF,UAAWC,IAAOiF,MAAOC,IAAKC,IAAOC,IAAI,aAC9C,kBAAC,EAAD,CAAO3F,KAAMuF,KAAKH,MAAMpF,KAAMK,QAASkF,KAAKH,MAAM/E,UAClD,kBAAC,EAAD,CAAeiE,oBAAqBiB,KAAKjB,sBACzC,kBAAC,EAAD,CAAOtE,KAAMuF,KAAKH,MAAMpF,KAAMK,QAASkF,KAAKH,MAAM/E,e,GArB5CuF,IAAMC,WCLxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U,mBCJhDC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,kBCA7DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,KAAO,oBAAoB,QAAU,yB,mBCA9ND,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7f3627b2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Card , CardContent , Typography , Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';  // use multiple class name at one object\r\n\r\nimport styles from './Cards.module.css';\r\nconst Cards = ({data:{confirmed,deaths,recovered,lastUpdate} , country} ) => {\r\n    if(!confirmed){\r\n        return 'Loading!!'  // if the data is not fetched\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">   \r\n                <Grid  item component={Card}  xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography  gutterBottom>INFECTED</Typography>\r\n                        <Typography variant='h4'>\r\n                            <CountUp start={0}end={confirmed.value} duration={2.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography className={styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        {country?\r\n                        <Typography className={styles.heading} variant=\"body2\">Number of Confirmed Cases of Covid-19 in {country} </Typography>:\r\n                        <Typography variant=\"body2\">Number of Confirmed Cases of Covid-19 Globally </Typography>\r\n                        }\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography  gutterBottom>RECOVERED</Typography>\r\n                        <Typography variant='h4'>\r\n                            <CountUp start={0}end={recovered.value} duration={2.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography  className={styles.date} >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        {country?\r\n                        <Typography className={styles.heading} variant=\"body2\">Number of Recovered Patients of Covid-19 in {country} </Typography>:\r\n                        <Typography variant=\"body2\">Number of Recovered Patients of Covid-19 Globally </Typography>\r\n                        }\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid  item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom>DEATHS</Typography>\r\n                        <Typography variant='h4'>\r\n                            <CountUp start={0}end={deaths.value} duration={2.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography className={styles.date} >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        {country?\r\n                        <Typography className={styles.heading} variant=\"body2\">Number of Deaths due to Covid-19 in {country} </Typography>:\r\n                        <Typography variant=\"body2\">Number of Deaths due to Covid-19 Globally</Typography>\r\n                        }\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\n// function to fetch data for confirmed recovered and deaths \r\nexport const fetchData = async (country) => {  \r\n\r\n    let changedURL=url; // url can be changable as to switch between gloabl and country \r\n\r\n    if(country){\r\n        changedURL=`${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, deaths, recovered, lastUpdate } } = await axios.get(changedURL);\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n        return modifiedData;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n \r\n// function to fetch daily data for line chart\r\nexport const fetchDailyData = async () =>{              \r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData= data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }\r\n        ))\r\n        return modifiedData;\r\n    } catch(err){\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\n// function to fecth countrie name to pass them to country picker\r\n\r\nexport const fetchCountries = async () =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=>country.name);\r\n\r\n    }catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n","import React , {useState , useEffect} from 'react';\r\n\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line , Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, deaths , recovered} , country}) => {\r\n\r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async() =>{\r\n            setDailyData(await fetchDailyData());    \r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n    \r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n                data={{\r\n                    labels:\r\n                        dailyData.map(({ date })=>date),\r\n                    datasets:[{\r\n                                    data:dailyData.map(({ confirmed })=>confirmed),\r\n                                    label:'Infected',\r\n                                    borderColor:'#01BFFF',\r\n                                    fill:true,\r\n                                } ,    \r\n                                {\r\n                                    data:dailyData.map(({ deaths })=>deaths),\r\n                                    label:'Deaths',\r\n                                    borderColor:'#F32013',\r\n                                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                                    fill:true,\r\n                                }           \r\n                            ],\r\n            }}\r\n            ></Line>)\r\n            :null\r\n    \r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ?\r\n        (\r\n            <Bar\r\n            data={{\r\n                labels:['Infected' , 'Recovered' , 'Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor: ['#01BFFF','#00FF7F', '#F32013' ],\r\n                    data:[confirmed.value , recovered.value , deaths.value]\r\n\r\n                }]\r\n            }}\r\n            options={{ \r\n                legend : {display:false},\r\n                title : {display:true , text: `Current Situation in ${country}`}\r\n            }}\r\n\r\n            />\r\n\r\n            \r\n        ):null \r\n\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?\r\n                barChart:\r\n                lineChart\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Chart;","import React , {useEffect, useState } from 'react';\r\nimport {NativeSelect , FormControl} from '@material-ui/core';\r\n\r\nimport { fetchCountries} from './../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries , setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       const fetchApi = async () =>{\r\n           setFetchedCountries(await fetchCountries());\r\n       } ;\r\n\r\n       fetchApi();\r\n    },[]);\r\n\r\n    return(\r\n        <FormControl className ={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange ={ (e) =>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global </option> \r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)} \r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n} \r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport {fetchData} from './api';\r\nimport covid from './covid.jpg'  //heading image \r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    state= {\r\n        data:[],\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount () {    //cDM to fetch the data first \r\n        const fetchedData = await fetchData();\r\n        this.setState({data :fetchedData})\r\n    }\r\n    handleCountryChange = async (country)=> {    \r\n        const data = await fetchData(country);\r\n        this.setState({ data, country: country });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={styles.container} >\r\n            <img className={styles.image} src={covid} alt='covid-19'/>\r\n            <Cards data={this.state.data} country={this.state.country}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Chart data={this.state.data} country={this.state.country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__PC8EF\",\"image\":\"App_image__2rCRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2k8dP\",\"card\":\"Cards_card__32hpg\",\"infected\":\"Cards_infected__2103W\",\"recovered\":\"Cards_recovered__Dsz-l\",\"deaths\":\"Cards_deaths__2gUX6\",\"date\":\"Cards_date__1toGy\",\"heading\":\"Cards_heading__3_KFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__5kSaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__PjWVH\"};","module.exports = __webpack_public_path__ + \"static/media/covid.8bc12995.jpg\";"],"sourceRoot":""}